import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        kotlin_version = '1.8.10'
        coroutines_version = '1.6.4'
        spigot_api_version = '1.15.2-R0.1-SNAPSHOT'
        slf4j_version = '2.0.7'
        exposed_version = '0.17.14'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = 'click.seichi'
version = '1.0-SNAPSHOT'

apply plugin: 'kotlin'

sourceCompatibility = targetCompatibility = 1.8
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

processResources {
    filteringCharset = 'UTF-8'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter(ReplaceTokens, tokens: [version: project.version])
        filter(ReplaceTokens, tokens: [name: project.rootProject.name])
        filter(ReplaceTokens, tokens: [lname: project.rootProject.name.toLowerCase()])
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    implementation group: 'org.spigotmc', name: 'spigot-api', version: spigot_api_version

    embed group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    embed group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: coroutines_version
    embed group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-rx2', version: coroutines_version
    embed group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version
    embed group: 'org.jetbrains.exposed', name: 'exposed', version: exposed_version

    implementation fileTree(dir: 'libs', include: '*.jar')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}